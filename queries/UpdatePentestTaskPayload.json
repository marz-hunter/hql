{
    "variables": {
        "var0": "__ARGV2__"
    },
    "query": "query ($var0:String!) {
		updatepentesttaskpayload {
			clientMutationId,
			errors(first:5) {
				edges {
					node {
						error_code,
						field,
						id,
						message,
						type,
					},
				},
				nodes {
					error_code,
					field,
					id,
					message,
					type,
				},
				total_count,
			},
			pentest_task {
				_id,
				connected_repositories(first:5) {
					edges {
						node {
							_id,
							default_branch,
							description,
							id,
							name,
							needs_review,
							sha,
							url,
						},
					},
					nodes {
						_id,
						default_branch,
						description,
						id,
						name,
						needs_review,
						sha,
						url,
					},
					total_count,
				},
				description,
				group_key,
				id,
				key,
				label,
				pentest_checks(first:5) {
					completed_count,
					edges {
						node {
							_id,
							attachments {
								_id,
								content_type,
								created_at,
								expiring_url,
								file_name,
								file_size,
								id,
								long_lasting_url,
								moderated,
							},
							description,
							id,
							instruction,
							message,
							pentest_checklist {
								_id,
								id,
								methodology,
							},
							pentesters {
								total_count,
								total_payment_amount,
							},
							report_ids,
							result,
							state,
							title,
						},
					},
					nodes {
						_id,
						attachments {
							_id,
							content_type,
							created_at,
							expiring_url,
							file_name,
							file_size,
							id,
							long_lasting_url,
							moderated,
						},
						description,
						id,
						instruction,
						message,
						pentest_checklist {
							_id,
							id,
							methodology,
							pentest_check {
								_id,
								description,
								id,
								instruction,
								message,
								report_ids,
								result,
								state,
								title,
							},
							pentest_checks {
								completed_count,
								total_count,
							},
							pentest_structured_scope {
								_id,
								asset_identifier,
								credential_instruction,
								id,
								methodologies,
								report_count_by_substate_severity_rating,
							},
							pentesters {
								total_count,
								total_payment_amount,
							},
							reports {
								bounty_awarded_by_severity,
								count_by_severity,
								count_by_substate_severity_rating,
								disclosure_open_request_count,
								median_time_to_bounty_awarded,
								median_time_to_disclosed,
								median_time_to_first_response,
								median_time_to_resolved,
								median_time_to_triage,
								net_report_workload_by_month,
								total_count,
							},
						},
						pentesters {
							nodes {
								_id,
								aasm_state,
								accepted_at,
								applied_as_lead,
								applied_at,
								award_amount,
								completed_at,
								id,
								revoked_at,
							},
							total_count,
							total_payment_amount,
						},
						report_ids,
						result,
						state,
						title,
					},
					total_count,
				},
				state,
			},
			was_successful,
		}
	}"
}